
#spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/proposta?useTimezone=true&serverTimezone=UTC
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost:3306}/proposta?useTimezone=true&serverTimezone=UTC
spring.datasource.username=spring
spring.datasource.password=spring

#   spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

# datasource
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.url=jdbc:h2:mem:mercado-livre
#spring.datasource.username=sa
#spring.datasource.password=
#
## jpa
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true

# h2
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

#Actuator
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true
#Prometheus Micrometer
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:serviço de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}


# Serviços Externos
api.dadosfinanceiros=${API_DADOS_FINANCEIROS:http://localhost:9999}
api.cadastracartao=${API_CADASTRA_CARTAO:http://localhost:8888}

#keycloak.token=Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJNZGVFSTVYellmenBHbllMQTRUR1pmc2E4YmpIOHp4QlNJUGdzTDVTWjdNIn0.eyJleHAiOjE2MjMwODY0NzAsImlhdCI6MTYyMzA4NjE3MCwianRpIjoiNGUyMjU0MWUtMzAxZi00ZWRiLWI2Y2QtZjc3YTNiMTRlZmJiIiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDoxODA4MC9hdXRoL3JlYWxtcy9wcm9wb3N0YSIsImF1ZCI6ImFjY291bnQiLCJzdWIiOiIwMGViOGZlMi01ZmMzLTQ2NWItYTM4Yy0zYjU1NzMwMmU0MDMiLCJ0eXAiOiJCZWFyZXIiLCJhenAiOiJwcm9wb3N0YS1hcHAiLCJzZXNzaW9uX3N0YXRlIjoiYmVlNTc2NGMtNTY1Ni00YThkLTgwMGQtYzJhMzZlMzg2OGU5IiwiYWNyIjoiMSIsInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJvZmZsaW5lX2FjY2VzcyIsImRlZmF1bHQtcm9sZXMtcHJvcG9zdGEiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoicHJvZmlsZSBwcm9wb3N0YS1zY29wZSBlbWFpbCIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoibHVjYXMgcm9kcmlndWVzIiwicHJlZmVycmVkX3VzZXJuYW1lIjoibHVjYXMiLCJnaXZlbl9uYW1lIjoibHVjYXMiLCJmYW1pbHlfbmFtZSI6InJvZHJpZ3VlcyIsImVtYWlsIjoibHVjYXNAZW1haWwuY29tIn0.ZbM79uwzKQ_gASGdvVtgdGCGcNXpiqdgwjqwigDCi8TFw7qSQZglUGQZ3RAQTBJEEKqcOXSnfd0xcnZLDMV9ddB8bsnwQNiTnF30ij2lfPtAV5Hgu-dAO6SZvHDplHj3_-202d5k5DbDcQFx3yBKMe_Tz3azJn-lHS3Lr6ErtdC8v6i4SBbUDwiH1_HwFi_WO9G7ylqvOeaaDQSxJ0GDjIOU4-v1R1CoIdGvmLNE53vE_VrzokFdkAaX51XlfDuWwWZtWkMIc9VkeKxYLNnM1gOQI31UUXRnhWTR6hBTzfdAzW9TSQxtpZ7KI6LgdcUO0nfiZ9GDIJcVjPLLmQrPMQ

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/proposta/protocol/openid-connect/certs}

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name:propostas}

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

opentracing.spring.cloud.feign.enabled=false
# True para enviar 100%
opentracing.jaeger.const-sampler.decision=${JAEGER_SAMPLER:true}
